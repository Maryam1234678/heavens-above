name: Scheduled Maintenance

on:
  schedule:
    - cron: '0 12 * * *'  # Daily at 12:00 UTC
  workflow_dispatch:

permissions:
  contents: read
  actions: write

jobs:
  maintenance:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Clean old cache files
        run: |
          echo "🧹 Cleaning cache..."
          find ./cache -type f -mtime +7 -delete || true
          echo "✅ Cache cleaned"
      
      - name: Backup database
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          echo "💾 Starting backup..."
          mkdir -p backups
          # Add your backup commands here
          echo "✅ Backup completed"
      
      - name: Generate daily report
        run: |
          echo "📊 Generating report..."
          node scripts/generate-report.js
          echo "✅ Report generated"
      
      - name: Health check
        run: |
          echo "🏥 Running health checks..."
          curl -f https://api.example.com/health
          echo "✅ Health check passed"
      
      - name: Create maintenance log
        if: always()
        run: |
          mkdir -p logs
          {
            echo "================================"
            echo "Maintenance Run: $(date -Iseconds)"
            echo "Status: ${{ job.status }}"
            echo "Runner: ${{ runner.os }}"
            echo "Workflow: ${{ github.workflow }}"
            echo "Run ID: ${{ github.run_id }}"
            echo "================================"
          } >> logs/maintenance.log
      
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: maintenance-logs-${{ github.run_id }}
          path: logs/
          retention-days: 30
      
      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🔧 Scheduled Maintenance Failed',
              body: `Maintenance failed on ${new Date().toISOString()}
              
              **Run:** ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              labels: ['maintenance', 'automated']
            })
